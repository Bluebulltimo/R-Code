#Code for Creating Partial Least Squares Analysis then Regularized Discriminant Analysis on the Same Data with Caret.  This is a good example of starting with one basic model then modifying small bits of it to create another model analyzing the same set of data.

#Create Model and View Results
library(caret)
library(mlbench)
data(Sonar)
set.seed(107)
inTrain <- createDataPartition(y = Sonar$Class, p = 0.75, list = FALSE)
training <- Sonar[inTrain, ]
testing <- Sonar[-inTrain, ]
ctrl <- trainControl(method = 'repeatedcv', repeats = 3, classProbs = TRUE, summaryFunction = twoClassSummary)
plsFit <- train(Class~. , data = training, method = 'pls', tuneLength = 15, trControl = ctrl, metric = 'ROC', preProc = c('center', 'scale'))
plsFit
plot(plsFit)

#Predict New Samples
plsClasses <- predict(plsFit, newdata = testing)
str(plsClasses)
plsProbs <- predict(plsFit, newdata = testing, type = 'prob')
head(plsProbs)

#Create Confusion Matrix
confusionMatrix(data = plsClasses, testing$Class)

#Additional Code for Regularized Discriminant Analysis Using Caret

#Create Model Using a Custom Grid
library(klaR)
set.seed(123)
rdaGrid <- data.frame(gamma = (0:4)/4, lambda = 3/4)
rdaFit <- train(Class~. , data = training, method = 'rda', tuneGrid = rdaGrid, trControl = ctrl, metric = 'ROC')
#Note:  model takes some time to run
rdaFit

# Predict and Create Confusion Matrix
rdaClasses <- predict(rdaFit, newdata = testing)
confusionMatrix(rdaClasses, testing$Class)

#Compare Results of PLS and RDA Models
resamps <- resamples(list(pls = plsFit, rda = rdaFit))
summary(resamps)

#Visualize Results
xyplot(resamps, what = 'BlandAltman')

#Find Differnce Between PLS and RDA Results
diffs <- diff(resamps)
summary(diffs)

#Code from
#"A Short Introduction to the Caret Package"
#Kuhn, Max
#August 6, 2015
